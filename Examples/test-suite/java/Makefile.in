#######################################################################
# Makefile for java test-suite
#######################################################################

LANGUAGE     = java
JAVA         = java
JAVAC        = javac
JAVAFLAGS    = -Xcheck:jni
SCRIPTSUFFIX = _runme.java
srcdir       = @srcdir@
top_srcdir   = ../@top_srcdir@
top_builddir = ../@top_builddir@

C_TEST_CASES = \
	java_lib_arrays \
	java_lib_various

# Use a different JAVA_PACKAGE set internally in the testcase.  This must match 
# what is internally in the test .i files (does swig support multiple package levels?)
# Make sure that the pragma dir DOES NOT exist (since test should create)
PRAGMATEST_PACKAGE = pragmajavapackage
PRAGMATEST_DIRSETUP = rm -rf $(PACKAGE_DIR)

CPP_TEST_CASES_PKGPRAGMA = \
        java_test_of_package_pragma

CPP_TEST_CASES_PKGOPT = \
	enum_thorough_proper \
	enum_thorough_simple \
	enum_thorough_typeunsafe \
	exception_partial_info \
	intermediary_classname \
	java_constants \
	java_director \
	java_director_assumeoverride \
	java_enums \
	java_lib_arrays_dimensionless \
	java_lib_various \
	java_jnitypes \
	java_pgcpp \
	java_pragmas \
	java_prepost \
	java_throws \
	java_typemaps_proxy \
	java_typemaps_typewrapper 
#	li_boost_intrusive_ptr

CPP_TEST_CASES = $(CPP_TEST_CASES_PKGOPT) $(CPP_TEST_CASES_PKGPRAGMA)
include $(srcdir)/../common.mk

# Overridden variables here
JAVA_PACKAGE = $*
PKGDIRSETUP = [ -d "$(JAVA_PACKAGE) ] || mkdir -p $(JAVA_PACKAGE);

# Add '-package' swigopt for ALL tests except for CPP_TEST_CASES_PKGPRAGMA
TEST_CASES_WITH_PKGOPT := $(filterout $(CPP_TEST_CASES_PKGPRAGMA:=.cpptest),$(NOT_BROKEN_TEST_CASES))
$(TEST_CASES_WITH_PKGOPT): SWIGOPT += -package $(JAVA_PACKAGE)

# Set JAVA_PACKAGE differently for the one test using a pragma javapackage
$(CPP_TEST_CASES_PKGPRAGMA:=.cpptest): JAVA_PACKAGE=$(PKGPRAGMA_PACKAGE) 
$(CPP_TEST_CASES_PKGPRAGMA:=.cpptest): PKGDIRSETUP=$(PKGPRAGMA_DIRSETUP)

# Custom tests - tests with additional commandline options
nspace.%: JAVA_PACKAGE = $*Package
nspace_extend.%: JAVA_PACKAGE = $*Package
director_nspace.%: JAVA_PACKAGE = $*Package

# Rules for the different types of tests
%.cpptest: 
	$(setup)
	$(PKGDIRSETUP)
	+echo $@ (cd $(JAVA_PACKAGE) && $(swig_and_compile_cpp))
	$echo $@ (run_testcase)

%.ctest:
	$(setup)
	$(PKGDIRSETUP)
	+echo $@ (cd $(JAVA_PACKAGE) && $(swig_and_compile_c))
	$echo $@ (run_testcase)

%.multicpptest: 
	$(setup)
	$(PKGDIRSETUP)
	+echo $@ (cd $(JAVA_PACKAGE) && $(swig_and_compile_multi_cpp))
	$echo $@ (run_testcase)

# don't duplicate $(setup), just add explicit $(PKGDIRSETUP)
# This doesn't work yet since for PKGPRAGMA test, PKGDIRSETUP deletes 
# JAVA_PACKAGE, but next line tries to cd there.  

# COMPILES java files then runs the testcase. A testcase is only run if
# a file is found which has _runme.java appended after the testcase name.
# Note Java uses LD_LIBRARY_PATH under Unix, PATH under Cygwin/Windows, SHLIB_PATH on HPUX and DYLD_LIBRARY_PATH on Mac OS X.
run_testcase = \
	cd $(JAVA_PACKAGE) && $(COMPILETOOL) $(JAVAC) -classpath . `find . -name "*.java"` && cd .. && \
	if [ -f $(srcdir)/$(SCRIPTPREFIX)$*$(SCRIPTSUFFIX) ]; then \
	  $(COMPILETOOL) $(JAVAC) -classpath . -d . $(srcdir)/$(SCRIPTPREFIX)$*$(SCRIPTSUFFIX) && \
	  env LD_LIBRARY_PATH="$(JAVA_PACKAGE):$$LD_LIBRARY_PATH" PATH="$(JAVA_PACKAGE):$$PATH" SHLIB_PATH="$(JAVA_PACKAGE):$$SHLIB_PATH" DYLD_LIBRARY_PATH="$(JAVA_PACKAGE):$$DYLD_LIBRARY_PATH" $(RUNTOOL) $(JAVA) $(JAVAFLAGS) -classpath . $*_runme; \
	fi

# Clean: remove testcase directories
%.clean:
	@if [ -d $(JAVA_PACKAGE) ]; then \
	  rm -rf $(JAVA_PACKAGE); \
	fi

clean:
	@rm -f *.class hs_err*.log
